basePath: /api/v1
definitions:
  handlers.ErrResponse:
    properties:
      error:
        type: string
    type: object
  handlers.RegisterRequest:
    type: object
  pb.LoginResponse:
    properties:
      message:
        type: string
      status:
        type: integer
      token:
        type: string
    type: object
  pb.RegisterResponse:
    properties:
      message:
        type: string
      status:
        type: integer
      userID:
        type: integer
    type: object
  pb.ViewUserResponse:
    properties:
      activitystatus:
        type: boolean
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      message:
        type: string
      status:
        type: integer
      userID:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a REST server created with Gin.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Task Manager API Gateway
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Generate JWT is user is authenticated
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pb.LoginResponse'
      summary: Authenticate user
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: RegisterRequest
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
      summary: Register
      tags:
      - users
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ViewUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pb.ViewUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.ViewUserResponse'
      summary: View user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
