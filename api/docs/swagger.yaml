definitions:
  handlers.ProjectReq:
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        example: johnsmith@example.com
        type: string
      firstname:
        example: john
        type: string
      lastname:
        example: smith
        type: string
      password:
        example: John123!
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - firstname
    - lastname
    - password
    type: object
  pb.CommonResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  pb.LoginResponse:
    properties:
      message:
        type: string
      status:
        type: integer
      token:
        type: string
    type: object
  pb.Project:
    properties:
      assignees:
        items:
          type: integer
        type: array
      created_on:
        type: string
      creator:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      tasks:
        items:
          $ref: '#/definitions/pb.Task'
        type: array
      updated_on:
        type: string
    type: object
  pb.ProjectResponse:
    properties:
      common_response:
        $ref: '#/definitions/pb.CommonResponse'
      project:
        $ref: '#/definitions/pb.Project'
    type: object
  pb.ProjectsResponse:
    properties:
      common_response:
        $ref: '#/definitions/pb.CommonResponse'
      project:
        items:
          $ref: '#/definitions/pb.Project'
        type: array
    type: object
  pb.RegisterResponse:
    properties:
      message:
        type: string
      status:
        type: integer
      userID:
        type: integer
    type: object
  pb.RemovedProjectResponse:
    properties:
      common_response:
        $ref: '#/definitions/pb.CommonResponse'
    type: object
  pb.Status:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Status_TODO
    - Status_INPROGRESS
    - Status_READY
    - Status_COMPLETED
  pb.Task:
    properties:
      assignee:
        type: integer
      creator:
        type: integer
      description:
        type: string
      id:
        type: string
      task_status:
        $ref: '#/definitions/pb.Status'
    type: object
  pb.ViewUserResponse:
    properties:
      activitystatus:
        type: boolean
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      message:
        type: string
      status:
        type: integer
      userID:
        type: integer
    type: object
  pkg_auth_handlers.ErrResponse:
    properties:
      error:
        type: string
    type: object
  pkg_task_handlers.ErrResponse:
    properties:
      error:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Generate JWT is user is authenticated
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_auth_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pb.LoginResponse'
      summary: Authenticate user
      tags:
      - users
  /project:
    get:
      consumes:
      - application/json
      description: view all project
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.ProjectsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_task_handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.ProjectsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.ProjectsResponse'
      summary: View Projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: ProjectReq
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_task_handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
      summary: Create Project
      tags:
      - projects
  /project/{ID}:
    delete:
      consumes:
      - application/json
      description: remove a project
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.RemovedProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_task_handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.RemovedProjectResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.RemovedProjectResponse'
      summary: Remove Project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: view a project by ID
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_task_handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
      summary: View Project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a project
      parameters:
      - description: ProjectReq
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_task_handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.ProjectResponse'
      summary: Update Project
      tags:
      - projects
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: RegisterRequest
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_auth_handlers.ErrResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
      summary: Register
      tags:
      - users
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ViewUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_auth_handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_auth_handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pb.ViewUserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.ViewUserResponse'
      summary: View user
      tags:
      - users
swagger: "2.0"
